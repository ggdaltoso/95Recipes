{"version":3,"sources":["components/Recipe.js","components/Recipes.js","App.js","serviceWorker.js","index.js"],"names":["StyledRecipe","styled","div","Name","span","Recipe","name","rest","style","marginBottom","Wrapper","FilterResult","Recipes","recipes","setSelectedRecipe","openModal","openFilterModal","filter","filteredRecipes","length","r","ingredients","some","i","includes","Ingredientes","title","Object","keys","icon","defaultPosition","x","y","marginLeft","height","width","window","innerWidth","menu","list","Item","onClick","bg","boxShadow","overflowY","maxHeight","values","map","recipe","key","join","recipesDB","localforage","createInstance","ingredientsDB","Hero","h1","App","useState","setRecipes","allIngredients","setAllIngredients","selectedRecipe","showModal","toggleModal","showFilterModal","toggleFilterModal","closeModal","useEffect","a","getItem","Tabletop","init","callback","_","data","allRecipes","models","m","pIndex","elements","findIndex","e","toLowerCase","slice","preparation","Array","from","Set","flat","sort","checked","setItem","simpleSheet","fetchData","t","innerHeight","top","buttons","value","legend","ingredient","measure","Quantidade","Medida","marginTop","margin","padding","display","changedIngredients","position","bottom","left","right","p","justifyContent","alignItems","marginRight","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f4e9a050.chunk.js","sourcesContent":["import React from 'react';\nimport { Icon } from '@react95/core/dist';\nimport styled from '@xstyled/styled-components';\n\nconst StyledRecipe = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n\n  width: 25%;\n  margin-bottom: 4px;\n`;\n\nconst Name = styled.span`\n  word-break: break-word;\n`;\n\nconst Recipe = ({ name, ...rest }) => (\n  <StyledRecipe {...rest}>\n    <Icon name=\"file_text\" style={{ marginBottom: 4 }} />\n    <Name>{`${name}.txt`}</Name>\n  </StyledRecipe>\n);\n\nexport default Recipe;\n","import React from 'react';\nimport styled from '@xstyled/styled-components';\nimport { Frame, Modal, List } from '@react95/core/dist';\n\nimport Recipe from './Recipe';\n\nconst Wrapper = styled.div`\n  display: flex;\n  grid-template-columns: repeat(4, 1fr);\n  flex-wrap: wrap;\n`;\n\nconst FilterResult = styled.span`\n  margin-bottom: -10px;\n  margin-top: 5px;\n`;\n\nconst Recipes = ({\n  recipes,\n  setSelectedRecipe,\n  openModal,\n  openFilterModal,\n  filter,\n}) => {\n  const filteredRecipes =\n    filter.length > 0\n      ? recipes.filter(r =>\n          r.ingredients.some(i => filter.includes(i.Ingredientes)),\n        )\n      : recipes;\n\n  return (\n    <Modal\n      title={`${Object.keys(recipes).length} recipes`}\n      icon=\"windows_explorer\"\n      defaultPosition={{ x: 0, y: 50 }}\n      style={{\n        marginLeft: 20,\n        height: 'auto',\n      }}\n      width={window.innerWidth - 40}\n      menu={[\n        {\n          name: 'File',\n          list: (\n            <List>\n              <List.Item onClick={() => openFilterModal(true)}>\n                Filter\n              </List.Item>\n            </List>\n          ),\n        },\n      ]}\n    >\n      <Frame\n        bg=\"white\"\n        boxShadow=\"in\"\n        height=\"100%\"\n        style={{\n          overflowY: 'auto',\n          maxHeight: '60vh',\n        }}\n      >\n        <Wrapper>\n          {Object.values(filteredRecipes).map(recipe => (\n            <Recipe\n              key={recipe.name}\n              onClick={() => {\n                setSelectedRecipe(recipe);\n                openModal();\n              }}\n              name={recipe.name}\n            />\n          ))}\n        </Wrapper>\n      </Frame>\n      {filter.length > 0 && (\n        <FilterResult>Filter: {filter.join(', ')}</FilterResult>\n      )}\n    </Modal>\n  );\n};\n\nexport default Recipes;\n","import React, { useEffect, useState } from 'react';\nimport Tabletop from 'tabletop';\nimport styled from '@xstyled/styled-components';\nimport {\n  ThemeProvider,\n  GlobalStyle,\n  Frame,\n  Modal,\n  Button,\n  Icon,\n  Fieldset,\n  Checkbox,\n} from '@react95/core/dist';\n\nimport localforage from 'localforage';\n\nimport { Recipes } from './components';\n\nconst recipesDB = localforage.createInstance({\n  name: ' recipes',\n});\n\nconst ingredientsDB = localforage.createInstance({\n  name: 'ingredients',\n});\n\nconst Hero = styled.h1`\n  font-size: 40px;\n  width: 100%;\n  text-align: center;\n`;\n\nfunction formatQtd(ingredient) {\n  if (!ingredient.Quantidade && !ingredient.Medida) {\n    return '';\n  } else if (ingredient.Medida === 'Inteiros') {\n    return ingredient.Quantidade;\n  } else if (ingredient.Quantidade && ingredient.Medida) {\n    return `${ingredient.Quantidade} ${ingredient.Medida}`;\n  }\n}\n\nfunction App() {\n  const [recipes, setRecipes] = useState({});\n  const [allIngredients, setAllIngredients] = useState([]);\n  const [selectedRecipe, setSelectedRecipe] = useState({});\n  const [showModal, toggleModal] = useState(false);\n  const [showFilterModal, toggleFilterModal] = useState(false);\n\n  function openModal() {\n    toggleModal(true);\n  }\n\n  function closeModal() {\n    toggleModal(false);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const recipes = await recipesDB.getItem('recipes');\n      const ingredients = await ingredientsDB.getItem('ingredients');\n\n      if (!recipes) {\n        Tabletop.init({\n          key: '1Uou8R5Bgrdl9M8ykKZeSj5MAl_huugiG3rRIQyMtxvI',\n          callback: (_, data) => {\n            const allRecipes = Object.values(data.models).map(m => {\n              const pIndex = m.elements.findIndex(e =>\n                e.Ingredientes.toLowerCase().includes('preparo'),\n              );\n\n              const ingredients = m.elements.slice(0, pIndex);\n              const preparation = m.elements.slice(\n                pIndex + 1,\n                m.elements.length,\n              );\n\n              return { name: m.name, ingredients, preparation };\n            });\n\n            const allIngredients = Array.from(\n              new Set(\n                allRecipes\n                  .map(r => r.ingredients.map(i => i.Ingredientes))\n                  .flat()\n                  .sort(),\n              ),\n            ).map(i => ({\n              name: i,\n              checked: false,\n            }));\n\n            recipesDB.setItem('recipes', allRecipes);\n            ingredientsDB.setItem('ingredients', allIngredients);\n\n            setRecipes(allRecipes);\n            setAllIngredients(allIngredients);\n          },\n          simpleSheet: true,\n        });\n      } else {\n        setRecipes(recipes);\n        setAllIngredients(ingredients);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const filter = allIngredients.filter(t => t.checked).map(i => i.name);\n\n  return (\n    <ThemeProvider>\n      <GlobalStyle />\n      <Hero>95 Recipes </Hero>\n\n      {Object.keys(recipes).length > 0 && (\n        <Recipes\n          recipes={recipes}\n          openModal={openModal}\n          setSelectedRecipe={setSelectedRecipe}\n          openFilterModal={toggleFilterModal}\n          filter={filter}\n        />\n      )}\n\n      {showModal && (\n        <Modal\n          width={window.innerWidth}\n          height={window.innerHeight - 30}\n          style={{ top: 0 }}\n          icon=\"bat_exec\"\n          title={selectedRecipe.name}\n          closeModal={closeModal}\n          buttons={[{ value: 'Close', onClick: closeModal }]}\n        >\n          <Fieldset legend=\"Ingredients\">\n            {selectedRecipe.ingredients.map(i => {\n              const measure = formatQtd(i);\n              return (\n                <div key={i.Ingredientes}>\n                  <strong>{`${measure} ${i.Ingredientes}`}</strong>\n                  {!measure ? ' a gosto' : ''}\n                  {i['Observação'] && ` - (${i['Observação'].toLowerCase()})`}\n                </div>\n              );\n            })}\n          </Fieldset>\n\n          {selectedRecipe.preparation.length > 0 && (\n            <Fieldset legend=\"How to prepare\" style={{ marginTop: 8 }}>\n              <ol style={{ margin: 0, padding: '0 0 0 12px' }}>\n                {selectedRecipe.preparation.map(i => (\n                  <li key={i.Ingredientes}>{i.Ingredientes}</li>\n                ))}\n              </ol>\n            </Fieldset>\n          )}\n        </Modal>\n      )}\n\n      {showFilterModal && (\n        <Modal\n          width={window.innerWidth}\n          height={window.innerHeight - 30}\n          style={{ top: 0 }}\n          icon=\"bat_exec\"\n          title=\"Filter\"\n          closeModal={() => toggleFilterModal(false)}\n          buttons={[\n            { value: 'Filter', onClick: () => toggleFilterModal(false) },\n          ]}\n        >\n          <Fieldset legend=\"Ingredients\">\n            {allIngredients.map(({ name, checked }) => (\n              <div\n                key={name}\n                style={{\n                  width: '30%',\n                  display: 'inline-block',\n                }}\n              >\n                <Checkbox\n                  checked={checked}\n                  onClick={() => {\n                    const changedIngredients = allIngredients.map(i =>\n                      i.name === name ? { name, checked: !i.checked } : i,\n                    );\n                    setAllIngredients(changedIngredients);\n                  }}\n                >\n                  {name}\n                </Checkbox>\n              </div>\n            ))}\n          </Fieldset>\n        </Modal>\n      )}\n\n      <Frame\n        style={{ position: ' fixed', bottom: 0, left: 0, right: 0 }}\n        width=\"100%\"\n        p={2}\n      >\n        <Button\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '2px 3px',\n          }}\n        >\n          <Icon name=\"logo\" style={{ marginRight: 4 }} width={20} height={20} />\n          Start\n        </Button>\n      </Frame>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}