{"version":3,"file":"b52ac5418d2faafae4296d468ca6c4c95d5b663d-630f781c9c14d3abbe45.js","mappings":"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","sources":["webpack://95Recipes/./node_modules/react-medium-image-zoom/dist/index.js","webpack://95Recipes/./src/components/Recipe.jsx","webpack://95Recipes/./src/utils/index.js"],"sourcesContent":["import React, { Component, createRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nfunction ICompress() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-unzoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\" })));\n}\nfunction IEnlarge() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-zoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\" })));\n}\n\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\nconst testDiv = (el) => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = (el) => testElType('IMG', el);\nconst testImgLoaded = (el) => el.complete && el.naturalHeight !== 0;\nconst testSvg = (el) => testElType('SVG', el);\nconst getScaleToWindow = ({ height, offset, width }) => {\n    return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\n};\nconst getScaleToWindowMax = ({ containerHeight, containerWidth, offset, targetHeight, targetWidth, }) => {\n    const scale = getScaleToWindow({\n        height: targetHeight,\n        offset,\n        width: targetWidth,\n    });\n    const ratio = targetWidth > targetHeight\n        ? targetWidth / containerWidth\n        : targetHeight / containerHeight;\n    return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = ({ containerHeight, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (!containerHeight || !containerWidth) {\n        return 1;\n    }\n    return !hasScalableSrc && targetHeight && targetWidth\n        ? getScaleToWindowMax({\n            containerHeight,\n            containerWidth,\n            offset,\n            targetHeight,\n            targetWidth,\n        })\n        : getScaleToWindow({\n            height: containerHeight,\n            offset,\n            width: containerWidth,\n        });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.currentSrc;\n        }\n        else if (testDiv(imgEl)) {\n            const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n            if (bgImg) {\n                return URL_REGEX.exec(bgImg)?.[1];\n            }\n        }\n    }\n};\nconst getImgAlt = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.alt ?? undefined;\n        }\n        else {\n            return imgEl.getAttribute('aria-label') ?? undefined;\n        }\n    }\n};\nconst getImgRegularStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    const scale = getScale({\n        containerHeight,\n        containerWidth,\n        hasScalableSrc,\n        offset,\n        targetHeight,\n        targetWidth,\n    });\n    return {\n        top: containerTop,\n        left: containerLeft,\n        width: containerWidth * scale,\n        height: containerHeight * scale,\n        transform: `translate(0,0) scale(${1 / scale})`,\n    };\n};\nconst parsePosition = ({ position, relativeNum }) => {\n    const positionNum = parseFloat(position);\n    return position.endsWith('%')\n        ? relativeNum * positionNum / 100\n        : positionNum;\n};\nconst getImgObjectFitStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, objectFit, objectPosition, offset, targetHeight, targetWidth, }) => {\n    if (objectFit === 'scale-down') {\n        if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n            objectFit = 'none';\n        }\n        else {\n            objectFit = 'contain';\n        }\n    }\n    if (objectFit === 'cover' || objectFit === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = objectFit === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'none') {\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'fill') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = Math.max(widthRatio, heightRatio);\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            width: containerWidth * scale,\n            height: containerHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        return {};\n    }\n};\nconst getDivImgStyle = ({ backgroundPosition, backgroundSize, containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = backgroundSize === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (backgroundSize === 'auto') {\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n        const sizeWidth = parsePosition({ position: sizeW, relativeNum: containerWidth });\n        const sizeHeight = parsePosition({ position: sizeH, relativeNum: containerHeight });\n        const widthRatio = sizeWidth / targetWidth;\n        const heightRatio = sizeHeight / targetHeight;\n        const ratio = Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = ({ hasZoomImg, imgSrc, isSvg, isZoomed, loadedImgEl, offset, shouldRefresh, targetEl, }) => {\n    const hasScalableSrc = isSvg ||\n        imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' ||\n        hasZoomImg ||\n        !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n    const imgRect = targetEl.getBoundingClientRect();\n    const targetElComputedStyle = window.getComputedStyle(targetEl);\n    const isDivImg = loadedImgEl != null && testDiv(targetEl);\n    const isImgObjectFit = loadedImgEl != null && !isDivImg;\n    const styleImgRegular = getImgRegularStyle({\n        containerHeight: imgRect.height,\n        containerLeft: imgRect.left,\n        containerTop: imgRect.top,\n        containerWidth: imgRect.width,\n        hasScalableSrc,\n        offset,\n        targetHeight: loadedImgEl?.naturalHeight ?? imgRect.height,\n        targetWidth: loadedImgEl?.naturalWidth ?? imgRect.width,\n    });\n    const styleImgObjectFit = isImgObjectFit\n        ? getImgObjectFitStyle({\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            objectFit: targetElComputedStyle.objectFit,\n            objectPosition: targetElComputedStyle.objectPosition,\n            offset,\n            targetHeight: loadedImgEl.naturalHeight,\n            targetWidth: loadedImgEl.naturalWidth,\n        })\n        : undefined;\n    const styleDivImg = isDivImg\n        ? getDivImgStyle({\n            backgroundPosition: targetElComputedStyle.backgroundPosition,\n            backgroundSize: targetElComputedStyle.backgroundSize,\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            offset,\n            targetHeight: loadedImgEl.naturalHeight,\n            targetWidth: loadedImgEl.naturalWidth,\n        })\n        : undefined;\n    const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n    if (isZoomed) {\n        const viewportX = window.innerWidth / 2;\n        const viewportY = window.innerHeight / 2;\n        const childCenterX = parseFloat(String(style.left || 0)) + (parseFloat(String(style.width || 0)) / 2);\n        const childCenterY = parseFloat(String(style.top || 0)) + (parseFloat(String(style.height || 0)) / 2);\n        const translateX = viewportX - childCenterX;\n        const translateY = viewportY - childCenterY;\n        if (shouldRefresh) {\n            style.transitionDuration = '0.01ms';\n        }\n        style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n    }\n    return style;\n};\nconst getStyleGhost = (imgEl) => {\n    if (!imgEl) {\n        return {};\n    }\n    if (testSvg(imgEl)) {\n        const parentEl = imgEl.parentElement;\n        const rect = imgEl.getBoundingClientRect();\n        if (parentEl) {\n            const parentRect = parentEl.getBoundingClientRect();\n            return {\n                height: rect.height,\n                left: parentRect.left - rect.left,\n                top: parentRect.top - rect.top,\n                width: rect.width,\n            };\n        }\n        else {\n            return {\n                height: rect.height,\n                left: rect.left,\n                width: rect.width,\n                top: rect.top,\n            };\n        }\n    }\n    else {\n        return {\n            height: imgEl.offsetHeight,\n            left: imgEl.offsetLeft,\n            width: imgEl.offsetWidth,\n            top: imgEl.offsetTop,\n        };\n    }\n};\n\nlet elDialogContainer;\nif (typeof document !== 'undefined') {\n    elDialogContainer = document.createElement('div');\n    elDialogContainer.setAttribute('data-rmiz-portal', '');\n    document.body.appendChild(elDialogContainer);\n}\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]']\n    .map(x => `${x}:not([aria-hidden=\"true\"])`)\n    .join(',');\nconst defaultBodyAttrs = {\n    overflow: '',\n    width: '',\n};\nfunction Controlled(props) {\n    return React.createElement(ControlledBase, { ...props });\n}\nclass ControlledBase extends Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            id: '',\n            isZoomImgLoaded: false,\n            loadedImgEl: undefined,\n            modalState: \"UNLOADED\",\n            shouldRefresh: false,\n        };\n        this.refContent = createRef();\n        this.refDialog = createRef();\n        this.refModalContent = createRef();\n        this.refModalImg = createRef();\n        this.refWrap = createRef();\n        this.imgEl = null;\n        this.prevBodyAttrs = defaultBodyAttrs;\n        this.styleModalImg = {};\n        this.setId = () => {\n            const gen4 = () => Math.random().toString(16).slice(-4);\n            this.setState({ id: gen4() + gen4() + gen4() });\n        };\n        this.setAndTrackImg = () => {\n            const contentEl = this.refContent.current;\n            if (!contentEl)\n                return;\n            this.imgEl = contentEl.querySelector(IMAGE_QUERY);\n            if (this.imgEl) {\n                this.changeObserver?.disconnect?.();\n                this.imgEl?.addEventListener?.('load', this.handleImgLoad);\n                this.imgEl?.addEventListener?.('click', this.handleZoom);\n                if (!this.state.loadedImgEl) {\n                    this.handleImgLoad();\n                }\n                this.imgElObserver = new ResizeObserver(entries => {\n                    const entry = entries[0];\n                    if (entry?.target) {\n                        this.imgEl = entry.target;\n                        this.setState({});\n                    }\n                });\n                this.imgElObserver.observe(this.imgEl);\n            }\n            else if (!this.changeObserver) {\n                this.changeObserver = new MutationObserver(this.setAndTrackImg);\n                this.changeObserver.observe(contentEl, { childList: true, subtree: true });\n            }\n        };\n        this.handleIfZoomChanged = (prevIsZoomed) => {\n            const { isZoomed } = this.props;\n            if (!prevIsZoomed && isZoomed) {\n                this.zoom();\n            }\n            else if (prevIsZoomed && !isZoomed) {\n                this.unzoom();\n            }\n        };\n        this.handleImgLoad = () => {\n            const { imgEl } = this;\n            const imgSrc = getImgSrc(imgEl);\n            if (!imgSrc)\n                return;\n            const img = new Image();\n            if (testImg(imgEl)) {\n                img.sizes = imgEl.sizes;\n                img.srcset = imgEl.srcset;\n            }\n            img.src = imgSrc;\n            const setLoaded = () => {\n                this.setState({ loadedImgEl: img });\n            };\n            img\n                .decode()\n                .then(setLoaded)\n                .catch(() => {\n                if (testImgLoaded(img)) {\n                    setLoaded();\n                    return;\n                }\n                img.onload = setLoaded;\n            });\n        };\n        this.handleZoom = () => {\n            this.props.onZoomChange?.(true);\n        };\n        this.handleUnzoom = () => {\n            this.props.onZoomChange?.(false);\n        };\n        this.handleDialogCancel = (e) => {\n            e.preventDefault();\n        };\n        this.handleDialogClick = (e) => {\n            if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\n                this.handleUnzoom();\n            }\n        };\n        this.handleKeyDown = (e) => {\n            if (e.key === 'Escape' || e.keyCode === 27) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.handleUnzoom();\n            }\n        };\n        this.handleWheel = (e) => {\n            if (e.ctrlKey)\n                return;\n            e.stopPropagation();\n            queueMicrotask(() => {\n                this.handleUnzoom();\n            });\n        };\n        this.handleTouchStart = (e) => {\n            if (e.changedTouches.length === 1 && e.changedTouches[0]) {\n                this.touchYStart = e.changedTouches[0].screenY;\n            }\n        };\n        this.handleTouchMove = (e) => {\n            if (this.touchYStart != null && e.changedTouches[0]) {\n                this.touchYEnd = e.changedTouches[0].screenY;\n                const max = Math.max(this.touchYStart, this.touchYEnd);\n                const min = Math.min(this.touchYStart, this.touchYEnd);\n                const delta = Math.abs(max - min);\n                const threshold = 10;\n                if (delta > threshold) {\n                    this.touchYStart = undefined;\n                    this.touchYEnd = undefined;\n                    this.handleUnzoom();\n                }\n            }\n        };\n        this.handleTouchCancel = () => {\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleResize = () => {\n            this.setState({ shouldRefresh: true });\n        };\n        this.zoom = () => {\n            this.bodyScrollDisable();\n            this.refDialog.current?.showModal?.();\n            this.setState({ modalState: \"LOADING\" });\n            this.loadZoomImg();\n            window.addEventListener('wheel', this.handleWheel, { passive: true });\n            window.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n            window.addEventListener('touchmove', this.handleTouchMove, { passive: true });\n            window.addEventListener('touchcancel', this.handleTouchCancel, { passive: true });\n            document.addEventListener('keydown', this.handleKeyDown, true);\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleZoomEnd, { once: true });\n        };\n        this.handleZoomEnd = () => {\n            setTimeout(() => {\n                this.setState({ modalState: \"LOADED\" });\n                window.addEventListener('resize', this.handleResize, { passive: true });\n            }, 0);\n        };\n        this.unzoom = () => {\n            this.setState({ modalState: \"UNLOADING\" });\n            window.removeEventListener('wheel', this.handleWheel);\n            window.removeEventListener('touchstart', this.handleTouchStart);\n            window.removeEventListener('touchmove', this.handleTouchMove);\n            window.removeEventListener('touchcancel', this.handleTouchCancel);\n            document.removeEventListener('keydown', this.handleKeyDown, true);\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleUnzoomEnd, { once: true });\n        };\n        this.handleUnzoomEnd = () => {\n            setTimeout(() => {\n                window.removeEventListener('resize', this.handleResize);\n                this.setState({\n                    shouldRefresh: false,\n                    modalState: \"UNLOADED\",\n                });\n                this.refDialog.current?.close?.();\n                this.bodyScrollEnable();\n            }, 0);\n        };\n        this.bodyScrollDisable = () => {\n            this.prevBodyAttrs = {\n                overflow: document.body.style.overflow,\n                width: document.body.style.width,\n            };\n            const clientWidth = document.body.clientWidth;\n            document.body.style.overflow = 'hidden';\n            document.body.style.width = `${clientWidth}px`;\n        };\n        this.bodyScrollEnable = () => {\n            document.body.style.width = this.prevBodyAttrs.width;\n            document.body.style.overflow = this.prevBodyAttrs.overflow;\n            this.prevBodyAttrs = defaultBodyAttrs;\n        };\n        this.loadZoomImg = () => {\n            const { props: { zoomImg } } = this;\n            const zoomImgSrc = zoomImg?.src;\n            if (zoomImgSrc) {\n                const img = new Image();\n                img.sizes = zoomImg?.sizes ?? '';\n                img.srcset = zoomImg?.srcSet ?? '';\n                img.src = zoomImgSrc;\n                const setLoaded = () => {\n                    this.setState({ isZoomImgLoaded: true });\n                };\n                img\n                    .decode()\n                    .then(setLoaded)\n                    .catch(() => {\n                    if (testImgLoaded(img)) {\n                        setLoaded();\n                        return;\n                    }\n                    img.onload = setLoaded;\n                });\n            }\n        };\n        this.UNSAFE_handleSvg = () => {\n            const { imgEl, refModalImg, styleModalImg } = this;\n            if (testSvg(imgEl)) {\n                const tmp = document.createElement('div');\n                tmp.innerHTML = imgEl.outerHTML;\n                tmp.querySelectorAll('mask[id]').forEach(maskEl => {\n                    const newId = maskEl.id + '-zoom';\n                    tmp.querySelectorAll(`[mask=\"url(#${maskEl.id})\"]`).forEach(maskedEl => {\n                        maskedEl.setAttribute('mask', `url(#${newId})`);\n                    });\n                    maskEl.id = newId;\n                });\n                const svg = tmp.firstChild;\n                svg.style.width = `${styleModalImg.width || 0}px`;\n                svg.style.height = `${styleModalImg.height || 0}px`;\n                svg.addEventListener('click', this.handleUnzoom);\n                refModalImg.current?.firstChild?.remove?.();\n                refModalImg.current?.appendChild?.(svg);\n            }\n        };\n    }\n    render() {\n        const { handleDialogCancel, handleDialogClick, handleUnzoom, handleZoom, imgEl, props: { a11yNameButtonUnzoom, a11yNameButtonZoom, children, classDialog, IconUnzoom, IconZoom, isZoomed, wrapElement: WrapElement, ZoomContent, zoomImg, zoomMargin, }, refContent, refDialog, refModalContent, refModalImg, refWrap, state: { id, isZoomImgLoaded, loadedImgEl, modalState, shouldRefresh, }, } = this;\n        const idModal = `rmiz-modal-${id}`;\n        const idModalImg = `rmiz-modal-img-${id}`;\n        const isDiv = testDiv(imgEl);\n        const isImg = testImg(imgEl);\n        const isSvg = testSvg(imgEl);\n        const imgAlt = getImgAlt(imgEl);\n        const imgSrc = getImgSrc(imgEl);\n        const imgSizes = isImg ? imgEl.sizes : undefined;\n        const imgSrcSet = isImg ? imgEl.srcset : undefined;\n        const hasZoomImg = !!zoomImg?.src;\n        const hasImage = imgEl &&\n            (loadedImgEl || isSvg) &&\n            window.getComputedStyle(imgEl).display !== 'none';\n        const labelBtnZoom = imgAlt\n            ? `${a11yNameButtonZoom}: ${imgAlt}`\n            : a11yNameButtonZoom;\n        const isModalActive = modalState === \"LOADING\" ||\n            modalState === \"LOADED\";\n        const dataContentState = hasImage ? 'found' : 'not-found';\n        const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\"\n            ? 'hidden'\n            : 'visible';\n        const styleContent = {\n            visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden',\n        };\n        const styleGhost = getStyleGhost(imgEl);\n        this.styleModalImg = hasImage\n            ? getStyleModalImg({\n                hasZoomImg,\n                imgSrc,\n                isSvg,\n                isZoomed: isZoomed && isModalActive,\n                loadedImgEl,\n                offset: zoomMargin,\n                shouldRefresh,\n                targetEl: imgEl,\n            })\n            : {};\n        let modalContent = null;\n        if (hasImage) {\n            const modalImg = isImg || isDiv\n                ? React.createElement(\"img\", { alt: imgAlt, sizes: imgSizes, src: imgSrc, srcSet: imgSrcSet, ...isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}, \"data-rmiz-modal-img\": \"\", height: this.styleModalImg.height || undefined, id: idModalImg, ref: refModalImg, style: this.styleModalImg, width: this.styleModalImg.width || undefined })\n                : isSvg\n                    ? React.createElement(\"div\", { \"data-rmiz-modal-img\": true, ref: refModalImg, style: this.styleModalImg })\n                    : null;\n            const modalBtnUnzoom = React.createElement(\"button\", { \"aria-label\": a11yNameButtonUnzoom, \"data-rmiz-btn-unzoom\": \"\", onClick: handleUnzoom, type: \"button\" },\n                React.createElement(IconUnzoom, null));\n            modalContent = ZoomContent\n                ? React.createElement(ZoomContent, { buttonUnzoom: modalBtnUnzoom, modalState: modalState, img: modalImg, onUnzoom: handleUnzoom })\n                : React.createElement(React.Fragment, null,\n                    modalImg,\n                    modalBtnUnzoom);\n        }\n        return (React.createElement(WrapElement, { \"aria-owns\": idModal, \"data-rmiz\": \"\", ref: refWrap },\n            React.createElement(WrapElement, { \"data-rmiz-content\": dataContentState, ref: refContent, style: styleContent }, children),\n            hasImage && React.createElement(WrapElement, { \"data-rmiz-ghost\": \"\", style: styleGhost },\n                React.createElement(\"button\", { \"aria-label\": labelBtnZoom, \"data-rmiz-btn-zoom\": \"\", onClick: handleZoom, type: \"button\" },\n                    React.createElement(IconZoom, null))),\n            hasImage && elDialogContainer != null && createPortal(React.createElement(\"dialog\", { \"aria-labelledby\": idModalImg, \"aria-modal\": \"true\", className: classDialog, \"data-rmiz-modal\": \"\", id: idModal, onClick: handleDialogClick, onClose: handleUnzoom, onCancel: handleDialogCancel, ref: refDialog, role: \"dialog\" },\n                React.createElement(\"div\", { \"data-rmiz-modal-overlay\": dataOverlayState }),\n                React.createElement(\"div\", { \"data-rmiz-modal-content\": \"\", ref: refModalContent }, modalContent)), elDialogContainer)));\n    }\n    componentDidMount() {\n        this.setId();\n        this.setAndTrackImg();\n        this.handleImgLoad();\n        this.UNSAFE_handleSvg();\n    }\n    componentWillUnmount() {\n        if (this.state.modalState !== \"UNLOADED\") {\n            this.bodyScrollEnable();\n        }\n        this.changeObserver?.disconnect?.();\n        this.imgElObserver?.disconnect?.();\n        this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\n        this.imgEl?.removeEventListener?.('click', this.handleZoom);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleZoomEnd);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleUnzoomEnd);\n        window.removeEventListener('wheel', this.handleWheel);\n        window.removeEventListener('touchstart', this.handleTouchStart);\n        window.removeEventListener('touchmove', this.handleTouchMove);\n        window.removeEventListener('touchcancel', this.handleTouchCancel);\n        window.removeEventListener('resize', this.handleResize);\n        document.removeEventListener('keydown', this.handleKeyDown, true);\n    }\n    componentDidUpdate(prevProps) {\n        this.UNSAFE_handleSvg();\n        this.handleIfZoomChanged(prevProps.isZoomed);\n    }\n}\nControlledBase.defaultProps = {\n    a11yNameButtonUnzoom: 'Minimize image',\n    a11yNameButtonZoom: 'Expand image',\n    IconUnzoom: ICompress,\n    IconZoom: IEnlarge,\n    wrapElement: 'div',\n    zoomMargin: 0,\n};\n\nfunction Uncontrolled(props) {\n    const [isZoomed, setIsZoomed] = useState(false);\n    return React.createElement(Controlled, { ...props, isZoomed: isZoomed, onZoomChange: setIsZoomed });\n}\n\nexport { Controlled, Uncontrolled as default };\n","import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { navigate } from 'gatsby';\nimport { Fieldset, Frame, Modal } from '@react95/core';\nimport { TASKBAR_HEIGHT, IconRenderer } from '../utils';\n\nimport Zoom from 'react-medium-image-zoom';\nimport 'react-medium-image-zoom/dist/styles.css';\n\nconst ImgGrid = styled.div`\n  display: grid;\n  grid-gap: 1px;\n  grid-template-columns: 1fr 1fr 1fr;\n\n  img {\n    max-width: 100%;\n    min-height: 100%;\n    display: block;\n    object-position: center;\n    object-fit: cover;\n  }\n`;\n\nconst RecipeWrapper = styled(Frame)`\n  overflow-y: auto;\n\n  p,\n  ol {\n    margin-top: 6px;\n  }\n\n  p,\n  li:not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Value = styled(Frame).attrs({\n  as: 'span',\n  boxShadow: 'none',\n  width: 26,\n  display: 'inline-block',\n  marginRight: 4,\n})`\n  text-align: right;\n`;\n\nasync function share(url) {\n  await navigator.share({ url });\n}\n\nconst Measure = ({ unit, value }) => (\n  <>\n    <Value>{value}</Value>\n    <span>{unit}</span>\n  </>\n);\n\nconst Recipe = ({\n  ingredients = [],\n  preparation = [],\n  images = [],\n  frontmatter,\n}) => {\n  const ref = useRef(null);\n  const [buttons, setButtons] = useState([]);\n\n  useEffect(() => {\n    // I'm not proud of this\n    ref.current.parentElement.style.overflow = 'auto';\n  }, [ref.current]);\n\n  // ensure this code run only in browser\n  useEffect(() => {\n    const {\n      location: { href: url },\n    } = document;\n\n    // Mac user may not have this feature 🫠\n    if (navigator.canShare && navigator.canShare({ url })) {\n      setButtons([{ value: 'Compartilhar', onClick: () => share(url) }]);\n    }\n  }, [setButtons]);\n\n  const { title, icon } = frontmatter;\n\n  return (\n    <Modal\n      title={title}\n      icon={<IconRenderer {...icon} />}\n      style={{\n        top: 0,\n        height: `calc(100% - ${TASKBAR_HEIGHT}px)`,\n        width: '100%',\n      }}\n      closeModal={() => navigate('/')}\n      buttons={buttons}\n    >\n      <RecipeWrapper boxShadow=\"none\" ref={ref}>\n        {ingredients.length > 0 && (\n          <Fieldset legend=\"Ingredientes\">\n            {ingredients.map(({ measure, ingredient, observation }) => (\n              <p key={ingredient}>\n                <Measure {...measure} />\n                <span> {ingredient}</span>\n                {observation && <small> - ({observation})</small>}\n                {!measure && <small> - (a gosto)</small>}\n              </p>\n            ))}\n          </Fieldset>\n        )}\n\n        <br />\n\n        {preparation.length > 0 && (\n          <Fieldset legend=\"Modo de preparo\">\n            <ol\n              style={{\n                marginBottom: 0,\n                paddingLeft: 28,\n              }}\n            >\n              {preparation.map((step) => (\n                <li key={step}>{step}</li>\n              ))}\n            </ol>\n          </Fieldset>\n        )}\n\n        {images.length > 0 && (\n          <Frame boxShadow=\"in\" p={1} my={8} mx={2}>\n            <ImgGrid>\n              {images.map((i, index) => (\n                <Zoom key={i} zoomMargin={10}>\n                  <img src={i} alt={`Zoomed image ${index}`} width=\"100%\" />\n                </Zoom>\n              ))}\n            </ImgGrid>\n          </Frame>\n        )}\n      </RecipeWrapper>\n    </Modal>\n  );\n};\n\nexport default Recipe;\n","import IconRenderer from '@react95/gatsby-theme/src/components/icon-renderer';\nimport { TASKBAR_HEIGHT } from '@react95/gatsby-theme/src/utils/constants';\n\nconst units = {\n  XICARAS: 'Xícaras',\n  INTEIROS: 'Inteiros',\n  COLHER_DE_CHA: 'Colher de chá',\n  COLHER_DE_SOPA: 'Colher de sopa',\n  KG: 'Kg',\n  G: 'G',\n  ML: 'mL',\n  DENTES: 'Dentes',\n};\n\nexport { units, IconRenderer, TASKBAR_HEIGHT };\n"],"names":["testElType","type","el","tagName","toUpperCase","testDiv","testImg","testImgLoaded","complete","naturalHeight","testSvg","getScaleToWindow","height","offset","width","Math","min","window","innerWidth","innerHeight","getScale","containerHeight","containerWidth","hasScalableSrc","targetHeight","targetWidth","scale","ratio","getScaleToWindowMax","URL_REGEX","getImgSrc","imgEl","currentSrc","bgImg","getComputedStyle","backgroundImage","exec","parsePosition","position","relativeNum","positionNum","parseFloat","endsWith","SRC_SVG_REGEX","getStyleModalImg","hasZoomImg","imgSrc","isSvg","isZoomed","loadedImgEl","shouldRefresh","targetEl","slice","test","imgRect","getBoundingClientRect","targetElComputedStyle","isDivImg","isImgObjectFit","styleImgRegular","containerLeft","containerTop","top","left","transform","getImgRegularStyle","naturalWidth","styleImgObjectFit","objectFit","objectPosition","widthRatio","heightRatio","max","posLeft","posTop","split","posX","posY","getImgObjectFitStyle","undefined","styleDivImg","backgroundPosition","backgroundSize","sizeW","sizeH","getDivImgStyle","style","Object","assign","viewportX","viewportY","translateX","String","translateY","transitionDuration","elDialogContainer","document","createElement","setAttribute","body","appendChild","IMAGE_QUERY","map","x","join","defaultBodyAttrs","overflow","Controlled","props","ControlledBase","Component","constructor","super","arguments","this","state","id","isZoomImgLoaded","modalState","refContent","createRef","refDialog","refModalContent","refModalImg","refWrap","prevBodyAttrs","styleModalImg","setId","gen4","random","toString","setState","setAndTrackImg","contentEl","current","querySelector","changeObserver","disconnect","addEventListener","handleImgLoad","handleZoom","imgElObserver","ResizeObserver","entries","entry","target","observe","MutationObserver","childList","subtree","handleIfZoomChanged","prevIsZoomed","zoom","unzoom","img","Image","sizes","srcset","src","setLoaded","decode","then","catch","onload","onZoomChange","handleUnzoom","handleDialogCancel","e","preventDefault","handleDialogClick","handleKeyDown","key","keyCode","stopPropagation","handleWheel","ctrlKey","queueMicrotask","handleTouchStart","changedTouches","length","touchYStart","screenY","handleTouchMove","touchYEnd","abs","handleTouchCancel","handleResize","bodyScrollDisable","showModal","loadZoomImg","passive","handleZoomEnd","once","setTimeout","removeEventListener","handleUnzoomEnd","close","bodyScrollEnable","clientWidth","zoomImg","zoomImgSrc","srcSet","UNSAFE_handleSvg","tmp","innerHTML","outerHTML","querySelectorAll","forEach","maskEl","newId","maskedEl","svg","firstChild","remove","render","a11yNameButtonUnzoom","a11yNameButtonZoom","children","classDialog","IconUnzoom","IconZoom","wrapElement","WrapElement","ZoomContent","zoomMargin","idModal","idModalImg","isDiv","isImg","imgAlt","alt","getAttribute","getImgAlt","imgSizes","imgSrcSet","hasImage","display","labelBtnZoom","isModalActive","dataContentState","dataOverlayState","styleContent","visibility","styleGhost","parentEl","parentElement","rect","parentRect","offsetHeight","offsetLeft","offsetWidth","offsetTop","getStyleGhost","modalContent","modalImg","ref","modalBtnUnzoom","onClick","buttonUnzoom","onUnzoom","createPortal","className","onClose","onCancel","role","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","Uncontrolled","setIsZoomed","useState","defaultProps","fill","focusable","viewBox","xmlns","d","ImgGrid","styled","div","withConfig","displayName","componentId","RecipeWrapper","Frame","Value","attrs","as","boxShadow","marginRight","Measure","_ref","unit","value","React","_ref2","ingredients","preparation","images","frontmatter","useRef","buttons","setButtons","useEffect","location","href","url","navigator","canShare","async","share","title","icon","Modal","IconRenderer","TASKBAR_HEIGHT","closeModal","navigate","Fieldset","legend","_ref3","measure","ingredient","observation","marginBottom","paddingLeft","step","p","my","mx","i","index","Zoom","units","XICARAS","INTEIROS","COLHER_DE_CHA","COLHER_DE_SOPA","KG","G","ML","DENTES"],"sourceRoot":""}